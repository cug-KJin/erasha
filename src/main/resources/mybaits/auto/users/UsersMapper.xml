<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demoweb.orm.mapper.auto.users.UsersMapper">
  <resultMap id="BaseResultMap" type="com.example.demoweb.orm.model.auto.users.Users">
    <result column="USER" jdbcType="CHAR" property="USER" />
    <result column="CURRENT_CONNECTIONS" jdbcType="BIGINT" property="CURRENT_CONNECTIONS" />
    <result column="TOTAL_CONNECTIONS" jdbcType="BIGINT" property="TOTAL_CONNECTIONS" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `USER`, CURRENT_CONNECTIONS, TOTAL_CONNECTIONS
  </sql>
  <select id="selectByExample" parameterType="com.example.demoweb.orm.model.auto.users.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.demoweb.orm.model.auto.users.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demoweb.orm.model.auto.users.Users">
    insert into users (`USER`, CURRENT_CONNECTIONS, TOTAL_CONNECTIONS
      )
    values (#{USER,jdbcType=CHAR}, #{CURRENT_CONNECTIONS,jdbcType=BIGINT}, #{TOTAL_CONNECTIONS,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demoweb.orm.model.auto.users.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="USER != null">
        `USER`,
      </if>
      <if test="CURRENT_CONNECTIONS != null">
        CURRENT_CONNECTIONS,
      </if>
      <if test="TOTAL_CONNECTIONS != null">
        TOTAL_CONNECTIONS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="USER != null">
        #{USER,jdbcType=CHAR},
      </if>
      <if test="CURRENT_CONNECTIONS != null">
        #{CURRENT_CONNECTIONS,jdbcType=BIGINT},
      </if>
      <if test="TOTAL_CONNECTIONS != null">
        #{TOTAL_CONNECTIONS,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demoweb.orm.model.auto.users.UsersExample" resultType="java.lang.Integer">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.USER != null">
        `USER` = #{record.USER,jdbcType=CHAR},
      </if>
      <if test="record.CURRENT_CONNECTIONS != null">
        CURRENT_CONNECTIONS = #{record.CURRENT_CONNECTIONS,jdbcType=BIGINT},
      </if>
      <if test="record.TOTAL_CONNECTIONS != null">
        TOTAL_CONNECTIONS = #{record.TOTAL_CONNECTIONS,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set `USER` = #{record.USER,jdbcType=CHAR},
      CURRENT_CONNECTIONS = #{record.CURRENT_CONNECTIONS,jdbcType=BIGINT},
      TOTAL_CONNECTIONS = #{record.TOTAL_CONNECTIONS,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.example.demoweb.orm.model.auto.users.Users">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="telphone" jdbcType="VARCHAR" property="telphone" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="userQQ" jdbcType="VARCHAR" property="userQQ" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="userwechat" jdbcType="VARCHAR" property="userwechat" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="userimage" jdbcType="VARCHAR" property="userimage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `uid`, telphone, username, `password`, realname, sex, userQQ, email, userwechat, 
    birthday, userimage
  </sql>
  <select id="selectByExample" parameterType="com.example.demoweb.orm.model.auto.users.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where `uid` = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where `uid` = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demoweb.orm.model.auto.users.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demoweb.orm.model.auto.users.Users">
    insert into users (`uid`, telphone, username, 
      `password`, realname, sex, 
      userQQ, email, userwechat, 
      birthday, userimage)
    values (#{uid,jdbcType=INTEGER}, #{telphone,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{userQQ,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{userwechat,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{userimage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demoweb.orm.model.auto.users.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="telphone != null">
        telphone,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="userQQ != null">
        userQQ,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="userwechat != null">
        userwechat,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="userimage != null">
        userimage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="telphone != null">
        #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="userQQ != null">
        #{userQQ,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userwechat != null">
        #{userwechat,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="userimage != null">
        #{userimage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demoweb.orm.model.auto.users.UsersExample" resultType="java.lang.Integer">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.telphone != null">
        telphone = #{record.telphone,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.userQQ != null">
        userQQ = #{record.userQQ,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.userwechat != null">
        userwechat = #{record.userwechat,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.userimage != null">
        userimage = #{record.userimage,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set `uid` = #{record.uid,jdbcType=INTEGER},
      telphone = #{record.telphone,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      userQQ = #{record.userQQ,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      userwechat = #{record.userwechat,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      userimage = #{record.userimage,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demoweb.orm.model.auto.users.Users">
    update users
    <set>
      <if test="telphone != null">
        telphone = #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="userQQ != null">
        userQQ = #{userQQ,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userwechat != null">
        userwechat = #{userwechat,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="userimage != null">
        userimage = #{userimage,jdbcType=VARCHAR},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demoweb.orm.model.auto.users.Users">
    update users
    set telphone = #{telphone,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      userQQ = #{userQQ,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      userwechat = #{userwechat,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      userimage = #{userimage,jdbcType=VARCHAR}
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
</mapper>